'use strict';
<<<<<<< HEAD
=======
<<<<<<< HEAD
const stripAnsi = require('strip-ansi');
const isFullwidthCodePoint = require('is-fullwidth-code-point');

module.exports = str => {
=======
>>>>>>> 38b3550458882284073f16d673a24f4c13324fc2
var stripAnsi = require('strip-ansi');
var codePointAt = require('code-point-at');
var isFullwidthCodePoint = require('is-fullwidth-code-point');

// https://github.com/nodejs/io.js/blob/cff7300a578be1b10001f2d967aaedc88aee6402/lib/readline.js#L1345
module.exports = function (str) {
<<<<<<< HEAD
=======
>>>>>>> 17d820e5fcb1d8a4629cdfc132404d3c3c4e068d
>>>>>>> 38b3550458882284073f16d673a24f4c13324fc2
	if (typeof str !== 'string' || str.length === 0) {
		return 0;
	}

<<<<<<< HEAD
=======
<<<<<<< HEAD
	str = stripAnsi(str);

	let width = 0;

	for (let i = 0; i < str.length; i++) {
		const code = str.codePointAt(i);

		// Ignore control characters
		if (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {
			continue;
		}

		// Ignore combining characters
		if (code >= 0x300 && code <= 0x36F) {
			continue;
		}

		// Surrogates
		if (code > 0xFFFF) {
			i++;
		}

		width += isFullwidthCodePoint(code) ? 2 : 1;
=======
>>>>>>> 38b3550458882284073f16d673a24f4c13324fc2
	var width = 0;

	str = stripAnsi(str);

	for (var i = 0; i < str.length; i++) {
		var code = codePointAt(str, i);

		// ignore control characters
		if (code <= 0x1f || (code >= 0x7f && code <= 0x9f)) {
			continue;
		}

		// surrogates
		if (code >= 0x10000) {
			i++;
		}

		if (isFullwidthCodePoint(code)) {
			width += 2;
		} else {
			width++;
		}
<<<<<<< HEAD
=======
>>>>>>> 17d820e5fcb1d8a4629cdfc132404d3c3c4e068d
>>>>>>> 38b3550458882284073f16d673a24f4c13324fc2
	}

	return width;
};
